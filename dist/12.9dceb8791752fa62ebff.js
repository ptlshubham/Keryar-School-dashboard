(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"5i6k":function(t,n,e){"use strict";e.r(n),e.d(n,"ManageModule",(function(){return k}));var r=e("fXoL"),a=e("ofXK"),s=e("yTNM"),d=e("PSD3"),i=e.n(d),o=e("pdMw"),c=e("hF5x"),l=function(t,n,e,r){var a,s=arguments.length,d=s<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(t,n,e,r);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(d=(s<3?a(d):s>3?a(n,e,d):a(n,e))||d);return s>3&&d&&Object.defineProperty(n,e,d),d},u=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},p=function(){function t(t,n){this.manageService=t,this.apiService=n,this.StdModel=new c.a,this.STD=[],this.editStd=[],this.getStdList()}return t.prototype.ngOnInit=function(){},t.prototype.addStdList=function(){var t=this;this.StdModel.isactive=!0,this.manageService.saveStdList(this.StdModel).subscribe((function(n){t.apiService.showNotification("top","right","Standard Added Successfully.","success"),t.getStdList(),t.islist=!1}))},t.prototype.getStdList=function(){var t=this;this.manageService.getStdList().subscribe((function(n){t.STD=n,t.islist=!0;for(var e=0;e<t.STD.length;e++)t.STD[e].index=e+1}))},t.prototype.removeStandard=function(t){var n=this;i.a.fire({title:"Are you sure?",text:"You want to delete! If you delete Standard than all the subjects and questions will be deleted",icon:"warning",showCancelButton:!0,customClass:{confirmButton:"btn btn-success",cancelButton:"btn btn-danger"},confirmButtonText:"Yes",buttonsStyling:!1}).then((function(e){1==e.value&&(n.manageService.removeStdList(t).subscribe((function(t){n.apiService.showNotification("top","right","Standard removed Successfully.","success")})),i.a.fire({title:"Deleted!",text:"Your standard has been deleted.",icon:"success",customClass:{confirmButton:"btn btn-success"},buttonsStyling:!1}),n.getStdList())}))},t.prototype.editStandard=function(t){this.editStd=t},t.prototype.updateStandardList=function(t){var n=this;this.manageService.updateStdList(t).subscribe((function(t){n.apiService.showNotification("top","right","Standard updated Successfully.","success")}))},t.ctorParameters=function(){return[{type:o.a},{type:s.a}]},t=l([Object(r.o)({selector:"app-standard",template:'<div class="main-content">\r\n    <div class="card">\r\n        <div class="card-header">\r\n            <div class="row">\r\n                <div class="col-md-10">\r\n                    <h4 class="card-title">Add Standard</h4>\r\n                </div>\r\n                <div class="ml-md-auto">\r\n                    <button type="cancel" class="btn btn-danger btn-round" routerLink="/dashboard">\r\n                        <i class="fa fa-arrow-left"></i> Back\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="card-body">\r\n            <form class="form-horizontal" name="stdRegForm" #stdRegForm="ngForm">\r\n                <div class="row">\r\n                    <label class="col-md-2 col-form-label">Enter Standard</label>\r\n                    <div class="col-md-4">\r\n                        <div class="form-group" [ngClass]="{ \'form-group-focus\': focus === true }">\r\n                            <input type="text" class="form-control" id="stdname" name="stdname"\r\n                                [(ngModel)]="StdModel.stdname" placeholder="Enter Standard" required value=""\r\n                                pattern="^[a-zA-Z0-9 ]+$" (focus)="focus = true" #stdname="ngModel" />\r\n                        </div>\r\n                        <div *ngIf="stdname.errors && (stdname.dirty || stdname.touched)" class="alert alert-danger">\r\n                            <div *ngIf="stdname.errors.required">\r\n                                Standard Name is required\r\n                            </div>\r\n                            <div [hidden]="!stdname.errors(\'pattern\')">\r\n                                Enter Only Characters and Numbers.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class="card-footer">\r\n            <div class="row">\r\n                <div class="ml-md-auto">\r\n                    <button type="submit" [disabled]="!stdRegForm.form.valid" (click)="addStdList()"\r\n                        class="btn btn-info btn-round">\r\n                        <i class="fa fa-paper-plane" aria-hidden="true"></i> Submit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="card" *ngIf="islist">\r\n        <div class="card-header">\r\n            <h4 class="card-title">Standard List</h4>\r\n        </div>\r\n        <div class="card-body">\r\n            <div class="table-responsive">\r\n                <table class="table table-striped" cellspacing="0" width="100%">\r\n                    <thead>\r\n                        <tr>\r\n                            <th class="text-center">#</th>\r\n                            <th class="text-center">Standard Name</th>\r\n                            <th class=" text-right">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor="let item of STD | paginate: { itemsPerPage: 10, currentPage: p }">\r\n                            <td class="text-center">{{item.index}}</td>\r\n                            <td class="text-center">{{ item.stdname }}</td>\r\n                            <td class="text-right">\r\n                                <a class="btn btn-warning btn-link btn-icon btn-sm edit" data-toggle="modal"\r\n                                    data-target="#standardModal">\r\n                                    <i class="fa far fa-eye" (click)="editStandard(item)"></i>\r\n                                </a>\r\n                                <a class="btn btn-danger btn-link btn-icon btn-sm remove"><i class="fa fa-times"\r\n                                        (click)="removeStandard(item.id)"></i></a>\r\n                            </td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div class="card-footer">\r\n            <div class="row">\r\n                <div class="ml-md-auto">\r\n                    <pagination-controls (pageChange)="p = $event" maxSize="5" autoHide="true" responsive="true">\r\n                    </pagination-controls>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    \x3c!-- View Standard Modal --\x3e\r\n    <div class="modal fade" id="standardModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"\r\n        aria-hidden="true">\r\n        <div class="modal-dialog modal-notice">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">\r\n                        <i class="nc-icon nc-simple-remove"></i>\r\n                    </button>\r\n                    <h5 class="modal-title" id="myModalLabel">Update Standard Name</h5>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="instruction">\r\n                        <form class="form-horizontal" name="mainCateRegForm" #mainCateRegForm="ngForm">\r\n                            <div class="row">\r\n                                <label class="col-sm-4 col-form-label">Standard Name</label>\r\n                                <div class="col-sm-8">\r\n                                    <div class="form-group">\r\n                                        <input type="text" class="form-control" id="standard" name="standard"\r\n                                            [(ngModel)]="editStd.stdname" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer justify-content-center">\r\n                    <button type="button" class="btn btn-info btn-round" data-dismiss="modal"\r\n                        (click)="updateStandardList(editStd)">\r\n                        Update\r\n                    </button>\r\n                    <button type="button" class="btn btn-secondary btn-round" data-dismiss="modal">\r\n                        <i class="fa fa-times" aria-hidden="true"></i> Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>',styles:[""]}),u("design:paramtypes",[o.a,s.a])],t)}(),b=e("tyNb"),m=e("rb2R"),v=e("TGpt"),h=function(t,n,e,r){var a,s=arguments.length,d=s<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(t,n,e,r);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(d=(s<3?a(d):s>3?a(n,e,d):a(n,e))||d);return s>3&&d&&Object.defineProperty(n,e,d),d},f=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},g=function(){function t(t,n,e){var r=this;this.manageService=t,this.activatedRoute=n,this.apiService=e,this.StdModel=new c.a,this.chapModel=new m.a,this.chapater=[],this.STD=[],this.SubjectModel=new v.a,this.subjects=[],this.val=0,this.valu=0,this.editSub=[],this.addSubjects=[],this.addChapt=[],this.chaptList=[],this.openChapaters=!1,this.activatedRoute.queryParams.subscribe((function(t){r.Ref_id=t.val})),this.getStdList()}return t.prototype.ngOnInit=function(){this.addSubjects=[{name:this.val}],this.val++,this.addChapt=[{name1:this.valu}],this.valu++},t.prototype.addChapList=function(){this.valu++,this.addChapt.push({name1:this.valu})},t.prototype.removeChapList=function(t){this.addChapt.splice(t,1)},t.prototype.addSubjectList=function(){this.val++,this.addSubjects.push({name:this.val})},t.prototype.removeSubjectList=function(t){this.addSubjects.splice(t,1)},t.prototype.getStdList=function(){var t=this;this.manageService.getStdList().subscribe((function(n){t.STD=n,null!=t.Ref_id&&t.selectSTDList(t.Ref_id)}))},t.prototype.selectSTDList=function(t){var n=this;this.stdId=t,this.getSubject(this.stdId),this.STD.forEach((function(e){e.id==t&&(n.selectedStd=e.stdname)}))},t.prototype.saveSubject=function(t){var n=this;this.addSubjects.forEach((function(t){t.id=n.stdId})),this.manageService.addSubject(this.addSubjects).subscribe((function(t){"success"==t?(n.addSubjects=[{name:n.val}],n.apiService.showNotification("top","right","Subject added Successfully.","success"),n.getSubject(n.stdId)):n.apiService.showNotification("top","center","Subject Already Added.","danger")}))},t.prototype.getSubject=function(t){var n=this;this.manageService.getSubjectList(t).subscribe((function(t){n.subjects=t;for(var e=0;e<n.subjects.length;e++)n.subjects[e].index=e+1}))},t.prototype.editSubject=function(t){this.editSub=t},t.prototype.updateSubject=function(t){var n=this;this.manageService.updateSubjectList(t).subscribe((function(t){n.apiService.showNotification("top","right","Subject updated Successfully.","success"),n.getSubject(n.stdId)}))},t.prototype.removeSubject=function(t){var n=this;i.a.fire({title:"Are you sure?",text:"You want to delete!",icon:"warning",showCancelButton:!0,customClass:{confirmButton:"btn btn-success",cancelButton:"btn btn-danger"},confirmButtonText:"Yes",buttonsStyling:!1}).then((function(e){1==e.value&&(n.manageService.removeSubjectList(t).subscribe((function(t){n.apiService.showNotification("top","right","Subject removed Successfully.","success")})),i.a.fire({title:"Deleted!",text:"Your standard has been deleted.",icon:"success",customClass:{confirmButton:"btn btn-success"},buttonsStyling:!1}),n.getSubject(n.stdId))}))},t.prototype.addSubjectsList=function(){this.openChapaters=!1},t.prototype.selectSubjectList=function(t){var n=this;this.subId=t,this.getSubject(this.stdId),this.subjects.forEach((function(e){e.id==t&&(n.selectedSub=e.subject)})),this.getChapaters()},t.prototype.addChapaters=function(){this.openChapaters=!0},t.prototype.saveChapatersList=function(){var t=this;this.chaptList=[],this.addChapt.forEach((function(n){var e={chapName:n.chap};t.chaptList.push(e)})),this.chapModel.chapList=this.chaptList,this.chapModel.stdid=this.stdId,this.chapModel.subid=this.subId,this.chapModel.isactive=!0,this.manageService.addChapaters(this.chapModel).subscribe((function(n){"success"==n?(t.apiService.showNotification("top","right","Chapter added Successfully.","success"),t.getChapaters()):t.apiService.showNotification("top","center","Chapter added Already.","danger")}))},t.prototype.getChapaters=function(){var t=this;this.manageService.getChapatersList(this.subId).subscribe((function(n){t.chapater=n;for(var e=0;e<t.chapater.length;e++)t.chapater[e].index=e+1}))},t.prototype.editChapater=function(t){this.chapModel=t},t.prototype.updateChapaterList=function(){var t=this;this.manageService.updateChapaterList(this.chapModel).subscribe((function(n){t.apiService.showNotification("top","right","Chapater updated Successfully.","success"),t.getChapaters()}))},t.prototype.removeChapater=function(t){var n=this;i.a.fire({title:"Are you sure?",text:"You want to delete!",icon:"warning",showCancelButton:!0,customClass:{confirmButton:"btn btn-success",cancelButton:"btn btn-danger"},confirmButtonText:"Yes",buttonsStyling:!1}).then((function(e){1==e.value&&(n.manageService.removeChapaterList(t).subscribe((function(t){n.apiService.showNotification("top","right","Subject removed Successfully.","success")})),i.a.fire({title:"Deleted!",text:"Your standard has been deleted.",icon:"success",customClass:{confirmButton:"btn btn-success"},buttonsStyling:!1}),n.getChapaters())}))},t.ctorParameters=function(){return[{type:o.a},{type:b.a},{type:s.a}]},t=h([Object(r.o)({selector:"app-subject",template:'<div class="main-content">\r\n  \x3c!-- Add Subjects --\x3e\r\n  <div class="card" *ngIf="!openChapaters">\r\n    <div class="card-header">\r\n      <div class="row">\r\n        <div class="col-md-9">\r\n          <h4 class="card-title">Add Subject</h4>\r\n        </div>\r\n        <div class="ml-md-auto">\r\n          <button type="submit" class="btn btn-info btn-round" routerLink="/manage/std">\r\n            <i class="fa fa-plus" aria-hidden="true"></i> Add Standard\r\n          </button>\r\n          <button class="btn btn-info btn-round" *ngIf="selectedStd" (click)="addChapaters()">\r\n            <i class="fa fa-plus" aria-hidden="true"></i> Add Chapters\r\n          </button>\r\n          <button type="cancel" class="btn btn-danger btn-round" routerLink="/dashboard">\r\n            <i class="fa fa-arrow-left"></i> Back\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class="card-body">\r\n      <form class="form-horizontal" name="SubjectForm" #SubjectForm="ngForm">\r\n        <div class="row">\r\n          <label class="col-sm-1 col-form-label">Select Standard</label>\r\n          <div class="col-sm-3">\r\n            <div class="dropdown form-group">\r\n              <button class="dropdown-toggle btn btn-primary btn-round btn-block" type="button"\r\n                name="dropdownMenuButton" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true"\r\n                aria-expanded="false">\r\n                {{ selectedStd }}\r\n              </button>\r\n              <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">\r\n                <div class="dropdown-header">Select STD</div>\r\n                <div *ngFor="let s of STD">\r\n                  <a class="dropdown-item" (click)="selectSTDList(s.id)" style="color:#252422 !important">{{\r\n                    s.stdname\r\n                    }}</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="row" *ngFor="let add of addSubjects; let ind = index">\r\n          <div class="col-md-4"></div>\r\n          <div class="col-md-3">\r\n            <div class="form-group" [ngClass]="{ \'form-group-focus\': focus === true }">\r\n              <input type="text" class="form-control" id="sname" name="sname" placeholder=" Enter Subject Name"\r\n                [(ngModel)]="add.subject" required value="" pattern="^[a-zA-Z]+$" (focus)="focus = true"\r\n                #sname="ngModel" />\r\n            </div>\r\n            <div *ngIf="sname.errors && (sname.dirty || sname.touched)" class="alert alert-danger">\r\n              <div *ngIf="sname.errors.required">Subject Name is required</div>\r\n              <div [hidden]="!sname.errors(\'pattern\')">\r\n                Enter Only Characters.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class="col-md-1">\r\n            <i class="fa fa-plus-circle" aria-hidden="true" (click)="addSubjectList()"\r\n              style="font-size: 33px !important; margin-top: 5% !important"></i>\r\n          </div>\r\n          <div class="col-md-1" *ngIf="ind > 0">\r\n            <i class="fa fa-times-circle" aria-hidden="true" (click)="removeSubjectList(ind)" style="\r\n                font-size: 33px !important;\r\n                margin-top: 5% !important;\r\n                margin-left: -80px !important;\r\n              "></i>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div class="card-footer">\r\n      <div class="row">\r\n        <div class="ml-md-auto">\r\n          <button type="submit" class="btn btn-info btn-round" [disabled]="!SubjectForm.form.valid || !selectedStd"\r\n            (click)="saveSubject(add)">\r\n            <i class="fa fa-paper-plane" aria-hidden="true"></i> Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \x3c!-- Manage Subjects --\x3e\r\n  <div class="card" *ngIf="!openChapaters">\r\n    <div class="card-header">\r\n      <div class="row">\r\n        <div class="col-sm-3">\r\n          <h4 class="card-title">Subjects With Standard</h4>\r\n        </div>\r\n        <label class="col-sm-1 col-form-label">Select Standard</label>\r\n        <div class="col-sm-3">\r\n          <div class="dropdown form-group">\r\n            <button class="dropdown-toggle btn btn-primary btn-round btn-block" type="button" name="dropdownMenuButton"\r\n              id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\r\n              {{ selectedStd }}\r\n            </button>\r\n            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">\r\n              <div class="dropdown-header">Select STD</div>\r\n              <div *ngFor="let s of STD">\r\n                <a class="dropdown-item" (click)="selectSTDList(s.id)">{{\r\n                  s.stdname\r\n                  }}</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="ml-md-auto">\r\n          <button class="btn btn-info btn-round" *ngIf="selectedStd" (click)="addChapaters()">\r\n            <i class="fa fa-plus" aria-hidden="true"></i> Add Chapters\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    <div class="card-body">\r\n      <div class="table-responsive">\r\n        <table class="table table-striped ">\r\n          <thead class="text-primary">\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Standard Name</th>\r\n              <th>Subject Name</th>\r\n              <th class="text-right">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor="let item of subjects | paginate: { itemsPerPage: 10, currentPage: p }">\r\n              <td>{{item.index}}</td>\r\n              <td>{{selectedStd}}</td>\r\n              <td>{{item.subject}}</td>\r\n\r\n              <td class="text-right">\r\n                <a href="javascript:void(0)" class="btn btn-warning btn-link btn-icon btn-sm edit"><i class="fa fa-edit"\r\n                    data-toggle="modal" data-target="#noticeModal" (click)="editSubject(item)"></i></a>\r\n                <a href="javascript:void(0)" class="btn btn-danger btn-link btn-icon btn-sm remove"><i\r\n                    class="fa fa-times" (click)="removeSubject(item.id)"></i></a>\r\n              </td>\r\n\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div class="card-footer">\r\n      <div class="row">\r\n        <div class="ml-md-auto">\r\n          <pagination-controls (pageChange)="p = $event" maxSize="5" autoHide="true" responsive="true">\r\n          </pagination-controls>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \x3c!-- subject Model --\x3e\r\n  <div class="modal fade" id="noticeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"\r\n    aria-hidden="true">\r\n    <div class="modal-dialog modal-notice">\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">\r\n            <i class="nc-icon nc-simple-remove"></i>\r\n          </button>\r\n          <h5 class="modal-title" id="myModalLabel">Update Subject Name</h5>\r\n        </div>\r\n        <div class="modal-body">\r\n          <div class="instruction">\r\n            <form class="form-horizontal" name="mainCateRegForm" #mainCateRegForm="ngForm">\r\n              <div class="row">\r\n                <label class="col-sm-4 col-form-label">Stanadard</label>\r\n                <div class="col-sm-8">\r\n                  <div class="form-group">\r\n                    <input type="text" class="form-control" id="username" name="username" [(ngModel)]="selectedStd"\r\n                      disabled />\r\n                  </div>\r\n                </div>\r\n                <label class="col-sm-4 col-form-label">Update Subject</label>\r\n                <div class="col-sm-8">\r\n                  <div class="form-group">\r\n                    <input type="text" class="form-control" id="subject" name="subject" [(ngModel)]="editSub.subject" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div class="modal-footer justify-content-center">\r\n          <button type="button" class="btn btn-info btn-round" data-dismiss="modal" (click)="updateSubject(editSub)">\r\n            Update\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \x3c!-- Add Chapaters --\x3e\r\n  <div class="card" *ngIf="openChapaters">\r\n    <div class="card-header">\r\n      <div class="row">\r\n        <div class="col-md-9">\r\n          <h4 class="card-title">Add Chapters</h4>\r\n        </div>\r\n        <div class="ml-md-auto">\r\n          <button type="submit" class="btn btn-info btn-round" (click)="addSubjectsList()">\r\n            <i class="fa fa-plus" aria-hidden="true"></i> Add Subjects\r\n          </button>\r\n          <button type="cancel" class="btn btn-danger btn-round" (click)="addSubjectsList()">\r\n            <i class="fa fa-arrow-left"></i> Back\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class="card-body">\r\n      <form class="form-horizontal" name="ChapatersForm" #ChapatersForm="ngForm">\r\n        <div class="row">\r\n          <label class="col-sm-1 col-form-label">Selected Standard</label>\r\n          <div class="col-sm-3">\r\n            <div class="form-group">\r\n              <input type="text" class="form-control" id="std" name="std" disabled required value="{{selectedStd}}" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="row">\r\n          <label class="col-sm-1 col-form-label">Select Subject</label>\r\n          <div class="col-sm-3">\r\n            <div class="dropdown form-group">\r\n              <button class="dropdown-toggle btn btn-primary btn-round btn-block" type="button"\r\n                name="dropdownMenuButton" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true"\r\n                aria-expanded="false">\r\n                {{ selectedSub }}\r\n              </button>\r\n              <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">\r\n                <div class="dropdown-header">Select Subject</div>\r\n                <div *ngFor="let s of subjects">\r\n                  <a class="dropdown-item" (click)="selectSubjectList(s.id)" style="color:#252422 !important">{{\r\n                    s.subject\r\n                    }}</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="row" *ngFor="let add of addChapt; let ind = index">\r\n          <div class="col-md-4"></div>\r\n          <div class="col-md-3">\r\n            <div class="form-group" [ngClass]="{ \'form-group-focus\': focus === true }">\r\n              <input type="text" class="form-control" id="chapname" name="chapname" placeholder=" Enter chapter Name"\r\n                [(ngModel)]="add.chap" required value="" pattern="^[a-zA-Z0-9 ]+$" (focus)="focus = true"\r\n                #chapname="ngModel" />\r\n            </div>\r\n            <div *ngIf="chapname.errors && (chapname.dirty || chapname.touched)" class="alert alert-danger">\r\n              <div *ngIf="chapname.errors.required">chapter Name is required</div>\r\n              <div *ngIf="chapname.errors.pattern">\r\n                Enter Only Characters.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class="col-md-1">\r\n            <i class="fa fa-plus-circle" aria-hidden="true" (click)="addChapList(add)"\r\n              style="font-size: 33px !important; margin-top: 5% !important"></i>\r\n          </div>\r\n          <div class="col-md-1" *ngIf="ind > 0">\r\n            <i class="fa fa-times-circle" aria-hidden="true" (click)="removeChapList(ind)" style="\r\n                  font-size: 33px !important;\r\n                  margin-top: 5% !important;\r\n                  margin-left: -80px !important;\r\n                "></i>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div class="card-footer">\r\n      <div class="row">\r\n        <div class="ml-md-auto">\r\n          <button type="submit" class="btn btn-info btn-round" [disabled]="!ChapatersForm.form.valid || !selectedSub"\r\n            (click)="saveChapatersList(add)">\r\n            <i class="fa fa-paper-plane" aria-hidden="true"></i> Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \x3c!-- Manage Chapaters --\x3e\r\n  <div class="card" *ngIf="openChapaters">\r\n    <div class="card-header">\r\n      <div class="row">\r\n        <div class="col-sm-3">\r\n          <h4 class="card-title">Manage Chapters</h4>\r\n        </div>\r\n        <label class="col-sm-1 col-form-label">Select subjects</label>\r\n        <div class="col-sm-3">\r\n\r\n          <div class="dropdown form-group">\r\n            <button class="dropdown-toggle btn btn-primary btn-round btn-block" type="button" name="dropdownMenuButton"\r\n              id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\r\n              {{ selectedSub }}\r\n            </button>\r\n            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton" title="Choose Package">\r\n              <div class="dropdown-header">Select Subject</div>\r\n              <div *ngFor="let s of subjects">\r\n                <a class="dropdown-item" (click)="selectSubjectList(s.id)" style="color:#252422 !important">{{\r\n                  s.subject\r\n                  }}</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="ml-md-auto">\r\n          \x3c!-- <button class="btn btn-info btn-round" *ngIf="selectedStd" (click)="addChapaters()">\r\n            <i class="fa fa-plus" aria-hidden="true"></i> Add Chapaters\r\n          </button> --\x3e\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    <div class="card-body">\r\n      <div class="table-responsive">\r\n        <table class="table table-striped ">\r\n          <thead class="text-primary">\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Standard Name</th>\r\n              <th>Subject Name</th>\r\n              <th>Chapter Name</th>\r\n              <th class="text-right">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor="let item of chapater | paginate: { itemsPerPage: 5, currentPage: pa }">\r\n              <td>{{item.index}}</td>\r\n              <td>{{selectedStd}}</td>\r\n              <td>{{selectedSub}}</td>\r\n              <td>{{item.chapname}}</td>\r\n\r\n              <td class="text-right">\r\n                <a href="javascript:void(0)" class="btn btn-warning btn-link btn-icon btn-sm edit"><i class="fa fa-edit"\r\n                    data-toggle="modal" data-target="#chapModal" (click)="editChapater(item)"></i></a>\r\n                <a href="javascript:void(0)" class="btn btn-danger btn-link btn-icon btn-sm remove"><i\r\n                    class="fa fa-times" (click)="removeChapater(item.id)"></i></a>\r\n              </td>\r\n\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div class="card-footer">\r\n      <div class="row">\r\n        <div class="ml-md-auto">\r\n          <pagination-controls (pageChange)="pa = $event" maxSize="5" autoHide="true" responsive="true">\r\n          </pagination-controls>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \x3c!-- Chapaters Model --\x3e\r\n  <div class="modal fade" id="chapModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">\r\n    <div class="modal-dialog modal-notice">\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">\r\n            <i class="nc-icon nc-simple-remove"></i>\r\n          </button>\r\n          <h5 class="modal-title" id="myModalLabel">Update Chapter Name</h5>\r\n        </div>\r\n        <div class="modal-body">\r\n          <div class="instruction">\r\n            <form class="form-horizontal" name="mainForm" #mainForm="ngForm">\r\n              <div class="row">\r\n                <label class="col-sm-4 col-form-label">Stanadard</label>\r\n                <div class="col-sm-8">\r\n                  <div class="form-group">\r\n                    <input type="text" class="form-control" id="std" name="std" value="{{selectedStd}}" disabled />\r\n                  </div>\r\n                </div>\r\n                <label class="col-sm-4 col-form-label">Subject</label>\r\n                <div class="col-sm-8">\r\n                  <div class="form-group">\r\n                    <input type="text" class="form-control" id="sub" name="sub" value="{{selectedSub}}" disabled />\r\n                  </div>\r\n                </div>\r\n                <label class="col-sm-4 col-form-label">Update Subject</label>\r\n                <div class="col-sm-8">\r\n                  <div class="form-group">\r\n                    <input type="text" class="form-control" id="subject" name="subject"\r\n                      [(ngModel)]="chapModel.chapname" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div class="modal-footer justify-content-center">\r\n          <button type="button" class="btn btn-info btn-round" data-dismiss="modal"\r\n            (click)="updateChapaterList(chapModel)">\r\n            Update\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>',styles:[""]}),f("design:paramtypes",[o.a,b.a,s.a])],t)}(),S=function(t,n,e,r){var a,s=arguments.length,d=s<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(t,n,e,r);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(d=(s<3?a(d):s>3?a(n,e,d):a(n,e))||d);return s>3&&d&&Object.defineProperty(n,e,d),d},y=function(t,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,n)},j=function(){function t(){}return t.prototype.ngOnInit=function(){},t.ctorParameters=function(){return[]},t=S([Object(r.o)({selector:"app-syllabus",template:"<p>syllabus works!</p>\r\n",styles:[""]}),y("design:paramtypes",[])],t)}(),w=[{path:"",children:[{path:"std",component:p}]},{path:"",children:[{path:"subject",component:g}]},{path:"",children:[{path:"syllabus",component:j}]}],C=e("3Pt+"),x=e("tk/3"),M=e("oOf3"),L=function(t,n,e,r){var a,s=arguments.length,d=s<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,e):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(t,n,e,r);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(d=(s<3?a(d):s>3?a(n,e,d):a(n,e))||d);return s>3&&d&&Object.defineProperty(n,e,d),d},k=function(){function t(){}return t=L([Object(r.M)({declarations:[p,g,j],imports:[a.c,x.c,C.d,M.a,b.e.forChild(w)]})],t)}()}}]);