(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{k6Cy:function(r,e,o){"use strict";o.r(e),o.d(e,"PasswordModule",(function(){return v}));var n=o("fXoL"),s=o("ofXK"),a=o("tyNb"),t=o("yTNM"),d=o("pdMw"),c=o("yBQe"),i=o("fxZ6"),l=function(r,e,o,n){var s,a=arguments.length,t=a<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)t=Reflect.decorate(r,e,o,n);else for(var d=r.length-1;d>=0;d--)(s=r[d])&&(t=(a<3?s(t):a>3?s(e,o,t):s(e,o))||t);return a>3&&t&&Object.defineProperty(e,o,t),t},u=function(r,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(r,e)},p=function(){function r(r,e,o,n){this.manageservice=r,this.loginService=e,this.apiService=o,this.router=n,this.oldpass=!1,this.forgotPwdModel=new c.a}return r.prototype.ngOnInit=function(){},r.prototype.focusOutFunction=function(r){var e=this,o={id:localStorage.getItem("AdminId"),pass:r,role:localStorage.getItem("role")};this.manageservice.CheckPassword(o).subscribe((function(r){r.length>=1?e.oldpass=!1:e.oldpass=!0}))},r.prototype.CompareFunction=function(r){},r.prototype.updatePasword=function(r){var e=this;if("Teacher"==localStorage.getItem("role")||"Student"==localStorage.getItem("role")){var o={id:localStorage.getItem("UserId"),role:localStorage.getItem("role"),password:r};this.loginService.changePassword(o).subscribe((function(r){localStorage.clear(),e.apiService.showNotification("top","right","Password changed Successfully. Login with new Password","success"),e.router.navigate(["/pages/login"])}))}else{o={id:localStorage.getItem("AdminId"),role:localStorage.getItem("role"),password:r};this.loginService.changePassword(o).subscribe((function(r){localStorage.clear(),e.apiService.showNotification("top","right","Password changed Successfully. Login with new Password","success"),e.router.navigate(["/pages/login"])}))}},r.ctorParameters=function(){return[{type:d.a},{type:i.a},{type:t.a},{type:a.d}]},r=l([Object(n.o)({selector:"app-password",template:'<div class="main-content">\r\n    <div class="card">\r\n        <div class="card-header">\r\n            <div class="row">\r\n                <div class="col-md-10">\r\n                    <h4 class="card-title">Change Password</h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="card-body">\r\n            <form class="form-horizontal" name="confirmPwdForm" #confirmPwdForm="ngForm">\r\n                <div class="row">\r\n                    <label class="col-md-2 col-form-label">Enter Current Password</label>\r\n                    <div class="col-md-4">\r\n                        <div class="form-group" [ngClass]="{ \'form-group-focus\': focus === true }">\r\n                            <input type="password" class="form-control" id="password" name="password"\r\n                                placeholder="Enter Old Password" required value="" pattern="^[a-zA-Z0-9 ]+$"\r\n                                (focus)="focus = true" (focusout)="focusOutFunction(password)"\r\n                                (mouseout)="focusOutFunction(password)" [(ngModel)]="password" />\r\n                        </div>\r\n                        <div *ngIf="password.errors && (password.dirty || password.touched)" class="alert alert-danger">\r\n                            <div *ngIf="password.errors.required">\r\n                                Standard Name is required\r\n                            </div>\r\n                            <div [hidden]="!password.errors(\'pattern\')">\r\n                                Enter Only Characters and Numbers.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="row">\r\n                    <label class="col-md-2 col-form-label">Enter New Password</label>\r\n                    <div class="col-md-4">\r\n                        <div class="form-group" [ngClass]="{ \'form-group-focus\': focus === true }">\r\n                            <input type="password" class="form-control" id="newpassword" name="newpassword"\r\n                                placeholder="Enter New  Password" required value="" pattern="^[a-zA-Z0-9 ]+$"\r\n                                (focus)="focus = true" [(ngModel)]="newpassword" />\r\n                        </div>\r\n                        <div *ngIf="newpassword.errors && (newpassword.dirty || newpassword.touched)"\r\n                            class="alert alert-danger">\r\n                            <div *ngIf="newpassword.errors.required">\r\n                                Standard Name is required\r\n                            </div>\r\n                            <div [hidden]="!newpassword.errors(\'pattern\')">\r\n                                Enter Only Characters and Numbers.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="row">\r\n                    <label class="col-md-2 col-form-label">Enter Confirm Password</label>\r\n                    <div class="col-md-4">\r\n                        <div class="form-group" [ngClass]="{ \'form-group-focus\': focus === true }">\r\n                            <input type="password" class="form-control" id="confmpassword" name="confmpassword"\r\n                                placeholder="Confirm New Password" required value="" pattern="^[a-zA-Z0-9 ]+$"\r\n                                (focus)="focus = true" (focusout)="CompareFunction(confmpassword)"\r\n                                (mouseout)="CompareFunction(confmpassword)" [(ngModel)]="confmpassword" />\r\n                        </div>\r\n                        <div *ngIf="confmpassword.errors && (confmpassword.dirty || confmpassword.touched)"\r\n                            class="alert alert-danger">\r\n                            <div *ngIf="confmpassword.errors.required">\r\n                                Standard Name is required\r\n                            </div>\r\n                            <div [hidden]="!confmpassword.errors(\'pattern\')">\r\n                                Enter Only Characters and Numbers.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class="card-footer">\r\n            <div class="row">\r\n                <div class="ml-md-auto">\r\n                    <button type="submit" [disabled]="!confirmPwdForm.form.valid " (click)="updatePasword(newpassword)"\r\n                        class="btn btn-info btn-round">\r\n                        <i class="fa fa-paper-plane" aria-hidden="true"></i> Submit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>',styles:[""]}),u("design:paramtypes",[d.a,i.a,t.a,a.d])],r)}(),f=o("3Pt+"),w=[{path:"",children:[{path:"",component:p}]}],m=function(r,e,o,n){var s,a=arguments.length,t=a<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)t=Reflect.decorate(r,e,o,n);else for(var d=r.length-1;d>=0;d--)(s=r[d])&&(t=(a<3?s(t):a>3?s(e,o,t):s(e,o))||t);return a>3&&t&&Object.defineProperty(e,o,t),t},v=function(){function r(){}return r=m([Object(n.M)({declarations:[p],imports:[s.c,f.d,a.e.forChild(w)]})],r)}()}}]);