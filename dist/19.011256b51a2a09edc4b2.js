(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{Y0UU:function(t,e,s){"use strict";s.r(e),s.d(e,"TestlistModule",(function(){return p}));var n=s("fXoL"),r=s("ofXK"),i=s("tyNb"),a=s("yTNM"),c=s("2v4T"),d=s("lDv5"),l=function(t,e,s,n){var r,i=arguments.length,a=i<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,s):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,s,n);else for(var c=t.length-1;c>=0;c--)(r=t[c])&&(a=(i<3?r(a):i>3?r(e,s,a):r(e,s))||a);return i>3&&a&&Object.defineProperty(e,s,a),a},o=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=function(){function t(t,e,s,n,r){var i=this;this.registerService=t,this.activatedRoute=e,this.router=s,this.apiService=n,this.examService=r,this.submittedTest=[],this.subjects=[],this.studentId=0,this.disptest=[],this.viewTest=!1,this.clickViewTest=!1,this.clickTest=!1,this.questions=[],this.saveresult={},this.pendingtestlist=[],this.notattemptedtestlist=[],this.checkedtest=[],this.stuname="",this.activatedRoute.queryParams.subscribe((function(t){i.studentId=t.val,i.subId=t.val1,i.selectedStd=t.selstd,i.stdid=t.stdid,i.stuname=t.name,i.getSubjectList()}))}return t.prototype.ngOnInit=function(){this.clickTest=!0,this.getSubmittedTest()},t.prototype.ngAfterViewInit=function(){$("#datatable").DataTable({pagingType:"full_numbers",lengthMenu:[[5,10,25,-1],[5,10,25,"All"]],responsive:!0,language:{search:"_INPUT_",searchPlaceholder:"Search records"}});$("#datatable").DataTable()},t.prototype.backTosubject=function(){this.clickTest=!0,this.clickViewTest=!1,this.viewTest=!1},t.prototype.backToRegister=function(){this.router.navigate(["/register"],{queryParams:{val:"Student"}})},t.prototype.getSubjectList=function(){var t=this;this.registerService.getSubjectByID(this.subId).subscribe((function(e){t.subjects=e}))},t.prototype.getSubmittedTest=function(){var t=this;this.studentId,this.examService.getActiveStudentTest(this.studentId).subscribe((function(e){t.submittedTest=e,t.submittedTest.forEach((function(e){e.stuid=t.studentId,t.registerService.getTotalObtainMarks(e).subscribe((function(t){e.totalobtainmarks=t}))}))}))},t.prototype.openTestList=function(t){var e=this;this.subjects.forEach((function(e){e.id==t.id?e.color="3px 3px 5px 5px #ef8157":e.color="3px 3px 5px 5px #ebf0ec"})),this.clickViewTest=!0,this.disptest=[];for(var s=0;s<this.disptest.length;s++)this.disptest[s].index=s+1;this.submittedTest.forEach((function(s){s.subjectId==t.id&&e.disptest.push(s)}))},t.prototype.cancelTest=function(){this.clickTest=!0,this.clickViewTest=!0,this.viewTest=!1},t.prototype.getTestList=function(t){var e=this;this.testName=t.testname,this.clickTest=!1,this.clickViewTest=!1,this.viewTest=!0,this.saveresult.testid=t.testid,this.saveresult.subid=t.subid,this.saveresult.stdid=t.id,this.saveresult.studentid=t.studentid,this.registerService.getTestforChecking(t.testid,this.studentId).subscribe((function(t){e.questions=t;for(var s=0;s<e.questions.length;s++)e.questions[s].index=s+1;e.questions.forEach((function(t){t.obtainmarks="",t.remark=""}))}))},t.prototype.submitTestChecking=function(){var t=this;this.saveresult.question=this.questions,this.registerService.savetestresult(this.saveresult).subscribe((function(e){t.clickTest=!0,t.clickViewTest=!0,t.viewTest=!1,t.apiService.showNotification("top","right","Marks and Remrks Successfully saved.","success")}))},t.ctorParameters=function(){return[{type:d.a},{type:i.a},{type:i.d},{type:a.a},{type:c.a}]},t=l([Object(n.o)({selector:"app-testlist",template:'<div class="main-content">\r\n    <div class="card" *ngIf="clickTest">\r\n        <div class="card-header">\r\n            <div class="row">\r\n                <div class="col-md-3">\r\n                    <h4 class="card-title">Select Subject</h4>\r\n                </div>\r\n                <div class="ml-md-auto">\r\n                    <button type="cancel" class="btn btn-danger btn-round" (click)="backToRegister()">\r\n                        <i class="fa fa-arrow-left"></i> Back\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="row" *ngIf="clickTest">\r\n        <div class="col-lg-2 col-md-6 col-sm-6" *ngFor="let s of subjects; let i = index">\r\n            <div class="card card-stats" (click)="openTestList(s)" [style.box-shadow]="s.color">\r\n                <div class="card-body">\r\n                    <div class="row">\r\n                        <div class="col-md-12">\r\n                            <div class="numbers">\r\n                                <p class="card-title" style="\r\n                        font-size: 22px !important;\r\n                        text-align: justify;\r\n                        font-weight: 600;\r\n                      ">\r\n                                    {{ s.subject }}\r\n                                </p>\r\n                                \x3c!-- <p class="card-category">Subject: {{disptest.length}} --\x3e\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="card-footer">\r\n                    <hr />\r\n                    <div class="stats">Total Test: {{disptest.length}}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="card" *ngIf="clickViewTest">\r\n        <div class="card-header">\r\n            <div class="row">\r\n                <div class="col-md-3">\r\n                    <h4 class="card-title">Test List</h4>\r\n                </div>\r\n                <div class="ml-md-auto">\r\n                    <button type="cancel" class="btn btn-danger btn-round" (click)="backTosubject()">\r\n                        <i class="fa fa-arrow-left"></i> Back\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="card-body">\r\n            <table id="datatable" class="table table-striped table-bordered" cellspacing="0" width="100%">\r\n                <thead>\r\n                    <tr>\r\n                        <th class="text-center">#</th>\r\n                        <th class="text-center">Student</th>\r\n                        <th class="text-center"> Test Name</th>\r\n                        <th class="text-center">Total Marks</th>\r\n                        <th class="text-center">Obtain Marks</th>\r\n                        <th class="text-center">Status</th>\r\n                        <th class="text-right">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor="let item of disptest | paginate: { itemsPerPage: 5, currentPage: p }">\r\n                        <td class="text-center">{{item.index}}</td>\r\n                        <td class="text-center">{{ stuname }}</td>\r\n                        <td class="text-center">{{ item.testname }}</td>\r\n                        <td class="text-center">{{ item.totalmarks }}</td>\r\n                        <td class="text-center" >{{ item.totalobtainmarks}}</td>\r\n                        <td class="text-center" >{{item.teststatus}}</td>\r\n                        <td class="text-right">\r\n                            <a class="btn btn-warning btn-link btn-icon btn-sm edit">\r\n                                <i class="fa far fa-eye" data-toggle="modal" data-target="#testModal"\r\n                                    (click)="getTestList(item)"></i>\r\n                            </a>\r\n                            <a class="btn btn-danger btn-link btn-icon btn-sm remove"><i class="fa fa-times"\r\n                                    (click)="removeTeacher(item.id)"></i></a>\r\n                        </td>\r\n\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class="card-footer">\r\n            <div class="row">\r\n                <div class="ml-md-auto">\r\n                    <pagination-controls (pageChange)="p = $event" maxSize="5" autoHide="true" responsive="true">\r\n                    </pagination-controls>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf="viewTest">\r\n        <div class="card card-plain">\r\n            <div class="card-header">\r\n                <div class="row">\r\n                    <div class="col-md-3">\r\n                        <h4 class="card-title">Test Details</h4>\r\n                    </div>\r\n                    <div class="ml-md-auto">\r\n                        <button type="cancel" class="btn btn-danger btn-round" (click)="cancelTest()">\r\n                            <i class="fa fa-arrow-left"></i> Back\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="card-body">\r\n                <div class="row">\r\n                    <div class="col-sm-4">\r\n                        <div class="card">\r\n                            <div class="card-body">\r\n                                <label class="dynamicLabel" for="testname">Test Name</label>\r\n                                <input type="text" [ngModel]="testName" disabled class="form-control" name="testname" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-sm-4">\r\n                        <div class="card">\r\n                            <div class="card-body">\r\n                                <label class="dynamicLabel" for="testname">Standard</label>\r\n                                <input type="text" [ngModel]="selectedStd" disabled class="form-control"\r\n                                    name="selectedStd" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-sm-4">\r\n                        <div class="card">\r\n                            <div class="card-body">\r\n                                <label class="dynamicLabel" for="testname">Subject</label>\r\n                                <input type="text" [ngModel]="selectedSub" disabled class="form-control"\r\n                                    name="testname" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="card">\r\n            <div class="card-header">\r\n                <div class="row">\r\n                    <div class="col-md-3">\r\n                        <h4 class="card-title">Check Answer</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="card-body">\r\n                <div class="table-responsive">\r\n                    <table class="table">\r\n                        <thead class="text-primary">\r\n                            <th class="text-center">#</th>\r\n                            <th class="text-center">Questions type</th>\r\n                            <th class="text-center">Questions</th>\r\n                            <th class="text-center">Questions Image</th>\r\n                            <th class="text-center">Total Marks</th>\r\n                            <th class="text-center">Answer</th>\r\n                            <th class="text-center">Obtain Marks</th>\r\n                            <th class="text-center">Remarks</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr\r\n                                *ngFor="let item of questions | paginate: { itemsPerPage: 5, currentPage: p };let i = index;let j = index">\r\n                                <td class="text-center">{{ i + 1 }}</td>\r\n                                <td>{{ item.quetype }}</td>\r\n                                <td class="text-center" *ngIf="item.question == \'undefined\'"></td>\r\n                                <td class="text-center" *ngIf="item.question != \'undefined\'">{{ item.question }}</td>\r\n                                <td>\r\n                                    <div class="img-container">\r\n                                        <img *ngIf="item.imageque != null"\r\n                                            src="http://31.220.59.174:3000{{ item.imageque }}" />\r\n                                    </div>\r\n                                </td>\r\n                                <td class="text-center">\r\n                                    {{ item.marks }}\r\n                                </td>\r\n                                <td class="text-center">\r\n                                    <textarea type="text" class="md-textarea form-control" name="tb-duration"\r\n                                        [ngModel]="item.answer" name="answer"></textarea>\r\n                                </td>\r\n                                <td class="text-center">\r\n                                    <input type="number" class="form-control" name="tb-duration"\r\n                                        [(ngModel)]="item.obtainmarks" name="item.obtainmarks"\r\n                                        value="{{item.obtainmarks}}" />\r\n                                </td>\r\n                                <td class="text-center">\r\n                                    <input type="text" class="form-control" name="tb-duration" [(ngModel)]="item.remark"\r\n                                        name="item.remark" value="{{item.remark}}" />\r\n                                </td>\r\n\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class="card-footer">\r\n                    <div class="row">\r\n                        <div class="ml-md-auto">\r\n                            <pagination-controls maxSize="5" (pageChange)="p = $event" autoHide="true" responsive="true">\r\n                            </pagination-controls>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="card-footer">\r\n                <div class="row">\r\n                    <div class="ml-md-auto">\r\n                        <button type="submit" class="btn btn-info btn-round" (click)="submitTestChecking()">\r\n                            <i class="fa fa-paper-plane" aria-hidden="true"></i> Submit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>',styles:[".dynamicLabel {\r\n    color: black !important;\r\n}"]}),o("design:paramtypes",[d.a,i.a,i.d,a.a,c.a])],t)}(),v=s("3Pt+"),h=[{path:"",children:[{path:"",component:u}]}],b=s("oOf3"),m=function(t,e,s,n){var r,i=arguments.length,a=i<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,s):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,s,n);else for(var c=t.length-1;c>=0;c--)(r=t[c])&&(a=(i<3?r(a):i>3?r(e,s,a):r(e,s))||a);return i>3&&a&&Object.defineProperty(e,s,a),a},p=function(){function t(){}return t=m([Object(n.M)({declarations:[u],imports:[r.c,v.d,b.a,i.e.forChild(h)]})],t)}()}}]);