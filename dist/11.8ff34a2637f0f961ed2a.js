(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{Xoj1:function(t,e,n){"use strict";n.r(e),n.d(e,"ExamModule",(function(){return g}));var r=n("fXoL"),s=n("ofXK"),i=n("pdMw"),a=n("2v4T"),o=n("0oXA"),l=n("yTNM"),d=n("PSD3"),c=n.n(d),u=function(t,e,n,r){var s,i=arguments.length,a=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,r);else for(var o=t.length-1;o>=0;o--)(s=t[o])&&(a=(i<3?s(a):i>3?s(e,n,a):s(e,n))||a);return i>3&&a&&Object.defineProperty(e,n,a),a},m=function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},b=function(){function t(t,e,n){this.manageService=t,this.examService=e,this.apiService=n,this.data={questions:[{id:1,question:"What is Angular?",options:["Front End Framework","JavaScript Latest Version","Back End Framework","Library"],answers:["Front End Framework"],isMultiChoice:!1,isMCQ:!0},{id:2,question:"What is DJango?",options:["Back End Framework","Python Framework","PHP Framework","Library"],answers:["Back End Framework","Python Framework"],isMultiChoice:!0,isMCQ:!0},{id:3,question:"Explain what is Vue.js.",isMultiChoice:!1,isMCQ:!1},{id:4,question:"Explain what is Routing in detail.",isMultiChoice:!1,isMCQ:!1}]},this.tests=[{id:1,stdId:1,subject:"Network",title:"CCNA - 1",totalQuestions:2,totalMarks:30,totalDuration:30,quizQuestions:[1,2]},{id:2,stdId:1,subject:"Computer",title:"Angular Demo Test",totalQuestions:2,totalMarks:30,totalDuration:30,quizQuestions:[2,3]},{id:3,stdId:1,subject:"Network",title:"CCNP - 1",totalQuestions:2,totalMarks:30,totalDuration:30,quizQuestions:[3,4]},{id:4,stdId:1,subject:"Computer",title:"React Test",totalQuestions:2,totalMarks:30,totalDuration:30,quizQuestions:[1,4]}],this.questionModel=new o.a,this.standards=[],this.subjects=[],this.TestList=[],this.filterTests=[],this.filterQuestions=[],this.ruleBoxFlag=!1,this.questionBoxFlag=!1,this.testInfoBoxFlag=!1,this.getStdList()}return t.prototype.ngOnInit=function(){},t.prototype.ngAfterViewInit=function(){$("#datatable").DataTable({pagingType:"full_numbers",lengthMenu:[[5,10,25,-1],[5,10,25,"All"]],responsive:!0,language:{search:"_INPUT_",searchPlaceholder:"Search records"}}),$("#datatable").DataTable().on("click",".like",(function(){alert("You clicked on Like button")}))},t.prototype.selectTest=function(t){var e=this;this.filterQuestions=[],this.filterTests.forEach((function(n){if(n.id==t){e.selectedTest=n.title,e.testInfoBoxFlag=!0,e.selectedTestData={id:n.id,title:n.title,totalQuestions:n.totalQuestions,totalMarks:n.totalMarks,totalDuration:n.totalDuration};for(var r=0;r<n.quizQuestions.length;r++)for(var s=0;s<e.data.questions.length;s++)n.quizQuestions[r]==e.data.questions[s].id&&e.filterQuestions.push(e.data.questions[s])}}))},t.prototype.getStdList=function(){var t=this;this.manageService.getStdList().subscribe((function(e){t.standards=e,t.defaultStandard=t.standards[0].id}))},t.prototype.selectSTDList=function(t){var e=this;this.testInfoBoxFlag=!1,this.stdId=t,this.getSubject(this.stdId),this.standards.forEach((function(n){n.id==t&&(e.selectedStd=n.stdname)}))},t.prototype.getSubject=function(t){var e=this;this.manageService.getSubjectList(t).subscribe((function(t){e.subjects=t}))},t.prototype.selectSubjectList=function(t){var e=this;this.selectedSubId=t,this.testInfoBoxFlag=!1,this.filterTests=[],this.filterQuestions=[],this.subjects.forEach((function(n){n.id==t&&(e.selectedSubject=n.subject,e.getTestList())}));for(var n=0;n<this.tests.length;n++)this.tests[n].subject==this.selectedSubject&&this.filterTests.push(this.tests[n])},t.prototype.showRulesBox=function(){this.ruleBoxFlag=!0},t.prototype.showQuestionsBox=function(){this.ruleBoxFlag=!1,this.questionBoxFlag=!0},t.prototype.getTestList=function(){var t=this;this.examService.getTest(this.selectedSubId).subscribe((function(e){t.TestList=e;for(var n=0;n<t.TestList.length;n++)t.TestList[n].index=n+1}))},t.prototype.ViewTestQue=function(t){var e=this;this.questionModel=t,this.examService.getViewTest(t.id).subscribe((function(t){e.queList=t;for(var n=0;n<e.queList.length;n++)e.queList[n].index=n+1;e.questionModel.totalque=t.length,e.questionModel.subname=e.selectedSubject,e.questionModel.stdname=e.selectedStd}))},t.prototype.SendLinkToStudent=function(t){var e=this,n={testid:t,stdid:this.stdId};this.examService.updateSendLinkToStudent(n).subscribe((function(t){e.apiService.showNotification("top","right","Test Link Sent Successfully.","success"),e.getTestList()}))},t.prototype.removeTestList=function(t){var e=this;c.a.fire({title:"Are you sure?",text:"You want to delete!",icon:"warning",showCancelButton:!0,customClass:{confirmButton:"btn btn-success",cancelButton:"btn btn-danger"},confirmButtonText:"Yes",buttonsStyling:!1}).then((function(n){1==n.value&&(e.examService.removeTest(t).subscribe((function(t){e.apiService.showNotification("top","right","Test Successfully Removed.","success"),e.getTestList()})),c.a.fire({title:"Deleted!",text:"Your banner has been deleted.",icon:"success",customClass:{confirmButton:"btn btn-success"},buttonsStyling:!1}))}))},t.ctorParameters=function(){return[{type:i.a},{type:a.a},{type:l.a}]},t=u([Object(r.o)({selector:"app-exam",template:'<div class="main-content">\r\n  <div class="row">\r\n    <div class="col col-sm-12 col-md-4">\r\n      <div class="card">\r\n        <div class="card-header">\r\n          <h4 class="card-title">Standard</h4>\r\n        </div>\r\n        <div class="card-body">\r\n          <div class="dropdown form-group">\r\n            <button class="dropdown-toggle btn btn-round btn-block" type="button" name="dropdownMenuButton"\r\n              id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\r\n              {{ selectedStd }}\r\n            </button>\r\n            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">\r\n              <div class="dropdown-header">Select Standard</div>\r\n              <div *ngFor="let std of standards">\r\n                <a class="dropdown-item" (click)="selectSTDList(std.id)">{{\r\n                  std.stdname\r\n                  }}</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class="col col-sm-12 col-md-4">\r\n      <div class="card">\r\n        <div class="card-header">\r\n          <h4 class="card-title">Subjects</h4>\r\n        </div>\r\n        <div class="card-body">\r\n          <div class="dropdown form-group">\r\n            <button class="dropdown-toggle btn btn-round btn-block" type="button" name="dropdownMenuButton"\r\n              id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\r\n              {{ selectedSubject }}\r\n            </button>\r\n            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">\r\n              <div class="dropdown-header">Select Subject</div>\r\n              <div *ngFor="let sub of subjects">\r\n                <a class="dropdown-item" (click)="selectSubjectList(sub.id)">{{\r\n                  sub.subject\r\n                  }}</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \x3c!-- <div class="col col-sm-12 col-md-4">\r\n      <div class="card">\r\n        <div class="card-header">\r\n          <h4 class="card-title">Tests</h4>\r\n        </div>\r\n        <div class="card-body">\r\n          <div class="dropdown form-group">\r\n            <button class="dropdown-toggle btn btn-round btn-block" type="button" name="dropdownMenuButton"\r\n              id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\r\n              {{ selectedTest }}\r\n            </button>\r\n            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">\r\n              <div class="dropdown-header">Select Test</div>\r\n              <div *ngFor="let t of filterTests">\r\n                <a class="dropdown-item" (click)="selectTest(t.id)">{{\r\n                  t.title\r\n                  }}</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div> --\x3e\r\n  </div>\r\n  <div class="card">\r\n    <div class="card-header">\r\n      <h4 class="card-title">Test List</h4>\r\n    </div>\r\n    <div class="card-body">\r\n      <div class="table-full-width table-responsive">\r\n        <table class="table table-striped">\r\n          <thead>\r\n            <tr>\r\n              <th class="text-center">#</th>\r\n              <th class="text-center">Test Name</th>\r\n              <th class="text-center">Total Marks</th>\r\n              <th class="text-center">Total Duration</th>\r\n              <th class="text-center">Create Date</th>\r\n              <th class="text-center">Test Date</th>\r\n              <th class="text-right">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor="let item of TestList | paginate: { itemsPerPage: 5, currentPage: p }">\r\n              <td class="text-center">{{item.index}}</td>\r\n              <td class="text-center">{{ item.testname }}</td>\r\n              <td class="text-center">{{ item.totalmarks }}</td>\r\n              <td class="text-center">{{ item.totalminute }}</td>\r\n              <td class="text-center">{{ item.createdate | date}}</td>\r\n              <td class="text-center">{{ item.updateddate | date}}</td>\r\n              <td class="text-right">\r\n                <a class="btn btn-warning btn-link btn-icon btn-sm edit">\r\n                  <i class="fa far fa-eye" data-toggle="modal" data-target="#testModal" (click)="ViewTestQue(item)"></i>\r\n                </a>\r\n                <a class="btn btn-danger btn-link btn-icon btn-sm remove"><i class="fa fa-times"\r\n                    (click)="removeTestList(item.id)"></i></a>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div class="card-footer ">\r\n      <div class="row">\r\n        <div class="ml-md-auto">\r\n          <pagination-controls (pageChange)="p = $event" maxSize="5" autoHide="true" responsive="true">\r\n          </pagination-controls>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class="modal fade" id="testModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">\r\n    <div class="modal-dialog modal-xl modal-notice">\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">\r\n            <i class="nc-icon nc-simple-remove"></i>\r\n          </button>\r\n          <h5 class="modal-title" id="myModalLabel">Create Test / Quiz</h5>\r\n        </div>\r\n        <div class="modal-body">\r\n          <div class="instruction">\r\n            <form class="form-vertical" #quizform="ngForm">\r\n              <div class="form-group row">\r\n                <label for="testname" class="col-sm-2 col-form-label">Test Name:\r\n                </label>\r\n                <div class="col-sm-10">\r\n                  <input type="text" disabled [(ngModel)]="questionModel.testname" class="form-control" name="testname"\r\n                    value="" />\r\n                </div>\r\n              </div>\r\n              <div class="form-group row">\r\n                <label for="standard" class="col-sm-2 col-form-label">Standard:\r\n                </label>\r\n                <div class="col-sm-4">\r\n                  <input type="text" disabled [(ngModel)]="questionModel.stdname" readonly class="form-control"\r\n                    name="stdname" value="" />\r\n                  \x3c!-- <input type="hidden" [ngModel]="standardId" readonly class="form-control" name="standardId" value=""> --\x3e\r\n                </div>\r\n                <label for="subject" class="col-sm-2 col-form-label">Subject:\r\n                </label>\r\n                <div class="col-sm-4">\r\n                  <input type="text" disabled [(ngModel)]="questionModel.subname" readonly class="form-control"\r\n                    name="subname" value="" />\r\n                  \x3c!-- <input type="hidden" [ngModel]="subjectId" readonly class="form-control" name="subjectId" value=""> --\x3e\r\n                </div>\r\n              </div>\r\n              <div class="form-group row">\r\n                <label for="totalquestion" class="col-sm-2 col-form-label">Total Questions:\r\n                </label>\r\n                <div class="col-sm-2">\r\n                  <input type="text" disabled [(ngModel)]="questionModel.totalque" readonly\r\n                    class="form-control-plaintext" name="totalque" value="" />\r\n                </div>\r\n                <label for="totalmarks" class="col-sm-2 col-form-label">Total Marks:\r\n                </label>\r\n                <div class="col-sm-2">\r\n                  <input type="text" disabled [(ngModel)]="questionModel.totalmarks" readonly\r\n                    class="form-control-plaintext" name="totalmarks" value="" />\r\n                </div>\r\n                <label for="totalduration" class="col-sm-2 col-form-label">Duration:\r\n                </label>\r\n                <div class="col-sm-2">\r\n                  <input type="text" disabled [(ngModel)]="questionModel.totalminute" readonly\r\n                    class="form-control-plaintext" name="totalminute" value="" />\r\n                </div>\r\n              </div>\r\n              <div class="card">\r\n                <div class="card-body">\r\n                  <div class="table-responsive">\r\n                    <table class="table">\r\n                      <thead class="text-primary">\r\n                        <th class="text-center">#</th>\r\n                        <th class="text-center">Questions type</th>\r\n                        <th class="text-center">Questions</th>\r\n                        <th class="text-center">Questions Image</th>\r\n                        <th class="text-center">Marks</th>\r\n                        <th class="text-center">Duration(Minutes)</th>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr *ngFor="let item of queList | paginate: { itemsPerPage: 5, currentPage: p };let i=index">\r\n                          <td class="text-center">{{ i + 1 }}</td>\r\n                          <td class="text-center">{{ item.quetype }}</td>\r\n                          <td class="text-center" *ngIf="item.question == \'undefined\'"></td>\r\n                          <td class="text-center" *ngIf="item.question != \'undefined\'">{{ item.question }}</td>\r\n                          <td class="text-center">\r\n                            <div class="img-container" *ngIf="item.imageque != null">\r\n                              <img *ngIf="item.imageque != null" src="http://31.220.59.174:3000{{ item.imageque }}"\r\n                                style="height: 40% !important;width: 40% !important;" />\r\n                            </div>\r\n                            <label *ngIf="item.imageque == null" style="font-size: larger;font-weight: bold;">-</label>\r\n                          </td>\r\n                         \r\n                          <td class="text-center">\r\n                            {{ item.marks }}\r\n                          </td>\r\n                          <td class="text-center">\r\n                            {{ item.time }}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n                <div class="card-footer ">\r\n                  <div class="row">\r\n                    <div class="ml-md-auto">\r\n                      <pagination-controls (pageChange)="p = $event" maxSize="5" autoHide="true" responsive="true">\r\n                      </pagination-controls>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class="modal-footer justify-content-center">\r\n                <button *ngIf="questionModel.activetest == 1" type="submit" class="btn btn-success btn-round"\r\n                  data-dismiss="modal" (click)="SendLinkToStudent(questionModel.id)">\r\n                  <i class="fa fa-link" aria-hidden="true"></i> Already Sent\r\n                  Link\r\n                </button>\r\n                <button *ngIf="questionModel.activetest == 0" type="submit" class="btn btn-primary btn-round"\r\n                  data-dismiss="modal" (click)="SendLinkToStudent(questionModel.id)">\r\n                  <i class="fa fa-link" aria-hidden="true"></i> Send Link\r\n                </button>\r\n                <button type="button " class="btn btn-secondary btn-round" data-dismiss="modal">\r\n                  <i class="fa fa-times" aria-hidden="true"></i> Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf="selectedTestData" class="row">\r\n    <div class="col col-sm-12">\r\n      <div class="card text-center">\r\n        <h2 class="card-header">Exam Information</h2>\r\n        <div class="card-body">\r\n          <h4 class="card-title">Title: {{ selectedTestData.title }}</h4>\r\n          <ul class="list-group">\r\n            <li class="\r\n                list-group-item\r\n                d-flex\r\n                justify-content-between\r\n                align-items-center\r\n              ">\r\n              Total Questions:\r\n              <span class="badge badge-primary">{{\r\n                selectedTestData.totalQuestions\r\n                }}</span>\r\n            </li>\r\n            <li class="\r\n                list-group-item\r\n                d-flex\r\n                justify-content-between\r\n                align-items-center\r\n              ">\r\n              Total Marks:\r\n              <span class="badge badge-primary">{{\r\n                selectedTestData.totalMarks\r\n                }}</span>\r\n            </li>\r\n            <li class="\r\n                list-group-item\r\n                d-flex\r\n                justify-content-between\r\n                align-items-center\r\n              ">\r\n              Total Duration:\r\n              <span class="badge badge-primary">{{\r\n                selectedTestData.totalDuration\r\n                }}</span>\r\n            </li>\r\n          </ul>\r\n          <button type="button" class="btn btn-primary" (click)="showRulesBox()">\r\n            <i class="fa fa-hourglass-start" aria-hidden="true"></i> Begin\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div *ngIf="ruleBoxFlag" class="row card">\r\n    <div class="col-md-12 mr-auto ml-auto">\r\n      <div class="card-body" data-color="primary">\r\n        <h4 class="text-center">\r\n          Before You Start the Exam, Here are the Rules:\r\n        </h4>\r\n        <ol type="1">\r\n          <li>The quiz will be of half an hour duration.</li>\r\n          <li>You can attempt the quiz only once.</li>\r\n          <li>All questions are Multiple Choice Question.</li>\r\n          <li>Only one choice is correct.</li>\r\n          <li>\r\n            Every question carry different of marks. No negative marking for\r\n            wrong answers.\r\n          </li>\r\n          <li>Try answer as quickly as you can.</li>\r\n          <li>\r\n            If you press Refresh or Go Back to previous page, there will be new\r\n            question for you and the question you were on will be counted as\r\n            attempted.\r\n          </li>\r\n          <li>\r\n            You will be able to see the RESULT immediately when you submit the\r\n            answer.\r\n          </li>\r\n          <li>Click Start Test to attempt the quiz.</li>\r\n          <li>\r\n            The time will start the moment you click the Start Test button.\r\n          </li>\r\n          <li>You can resume this quiz, if interrupted due to any reason.</li>\r\n          <li>\r\n            Click on Next button to move next question. Please note that you\r\n            will not be able to go back to any of the previous question after\r\n            clicking Next button.\r\n          </li>\r\n          <li>Click on Submit Test button on completion of the quiz.</li>\r\n        </ol>\r\n        <div class="row">\r\n          <div class="col col-sm-12 text-center">\r\n            <button type="cancel" class="btn btn-round" routerLink="/dashboard">\r\n              Cancel\r\n            </button>\r\n            <button type="button" class="btn btn-round btn-success" (click)="showQuestionsBox()">\r\n              <i class="fa fa-hourglass-start" aria-hidden="true"></i> START\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div *ngIf="questionBoxFlag" class="row">\r\n    <div class="col-md-10 mr-auto ml-auto">\r\n      <div *ngFor="let dt of filterQuestions; let i = index" class="jumbotron" data-color="primary"\r\n        id="{{ \'que\' + i }}">\r\n        <h2>{{ dt.question }}</h2>\r\n        <div *ngFor="let op of dt.options">\r\n          <div *ngIf="dt.isMCQ" class="row">\r\n            <div *ngIf="!dt.isMultiChoice" class="col col-sm-12">\r\n              <label><input name="radioOpt" type="radio" />{{ op }}</label>\r\n            </div>\r\n            <div *ngIf="dt.isMultiChoice" class="col col-sm-12">\r\n              <label><input type="checkbox" />{{ op }}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf="!dt.isMCQ" class="row">\r\n          <div class="col col-sm-12">\r\n            <label for="ansta">Write Your Answer Here</label>\r\n            <pre></pre>\r\n            <textarea id="ansta" name="ansta" rows="4" cols="100"></textarea>\r\n          </div>\r\n        </div>\r\n        <div class="sq"></div>\r\n        <div class="lq"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>',styles:[""]}),m("design:paramtypes",[i.a,a.a,l.a])],t)}(),p=n("3Pt+"),v=n("tyNb"),h=n("oOf3"),f=function(t,e,n,r){var s,i=arguments.length,a=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,r);else for(var o=t.length-1;o>=0;o--)(s=t[o])&&(a=(i<3?s(a):i>3?s(e,n,a):s(e,n))||a);return i>3&&a&&Object.defineProperty(e,n,a),a},g=function(){function t(){}return t=f([Object(r.M)({declarations:[b],imports:[s.c,p.d,h.a,v.e.forChild([{path:"exam",component:b}])]})],t)}()}}]);